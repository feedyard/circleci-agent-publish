# src/jobs/dev-release.yaml

description: Check, build, and optionally deploy a Docker image.

executor: circleci-base-agent

parameters:

  dockerfile:
    description: Name of dockerfile
    type: string
    default: Dockerfile

  path:
    description: Path to the directory containing your Dockerfile and build context
    type: string
    default: .

  image:
    description: Name of image
    type: string

  tag:
    description: Value for tag
    type: string
    default: dev.$CIRCLE_SHA1

  registry:
    description: Name of registry
    type: string
    default: docker.io

  registry-login:
    description: username for reigstry access
    type: env_var_name
    default: DOCKER_LOGIN

  registry-password:
    description: password for registry access
    type: env_var_name
    default: DOCKER_PASSWORD

  extra-build-args:
    description: >
      Extra flags to pass to docker build. For examples, see
      https://docs.docker.com/engine/reference/commandline/build
    type: string
    default: ""

  after-checkout:
    description: Optional steps to run after checking out the code.
    type: steps
    default: []

  before-build:
    description: Optional steps to run before building the docker image.
    type: steps
    default: []

  after-build:
    description: Optional steps to run after building the docker image.
    type: steps
    default: []

steps:
  - checkout
  - setup_remote_docker
  - lint
  - run:
      name: debug
      command: echo << parameters.tag >>
  - when:
      name: Run after_checkout lifecycle hook steps.
      condition: << parameters.after-checkout >>
      steps: << parameters.after-checkout >>
  - confirm-registry:
      registry: << parameters.registry >>
      registry-login: << parameters.registry-login >>
      registry-password: << parameters.registry-password >>
  - when:
      name: Run before_build lifecycle hook steps.
      condition: << parameters.before-build >>
      steps: << parameters.before-build >>
  - build:
      dockerfile: << parameters.dockerfile >>
      path: << parameters.path >>
      image: << parameters.image >>
      tag: << parameters.tag >>
      registry: << parameters.registry >>
      extra-build-args: << parameters.extra-build-args >>
  - when:
      name: Run after_build lifecycle hook steps.
      condition: << parameters.after-build >>
      steps: << parameters.after-build >>
  - push:
      registry: << parameters.registry >>
      image: << parameters.image >>
      tag: << parameters.tag >>