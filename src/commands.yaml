commands:

  check-registry:
    description: |
      confirm $DOCKER_LOGIN and $DOCKER_PASSWORD environment variables are set and
      run docker login to ensure that you can push the build image
    parameters:
      registry:
        description: Docker registry
        type: string
        default: docker.io
    steps:
      - run:
          name: Confirm Docker registry environment variables are configured and correct
          command: |
            if [[ -z "${DOCKER_LOGIN}" ]]; then
              echo "DOCKER_LOGIN is not set, will not be able to push image."
              exit 1
            fi

            if [[ -z "${DOCKER_PASSWORD}" ]]; then
              echo "DOCKER_PASSWORD is not set, will not be able to push image."
              exit 1
            fi
      - run:
          name: Confirm Docker registry login
          command: echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_LOGIN --password-stdin << parameters.registry >>

  build:
    description: Builds Docker Image.
    parameters:
      dockerfile:
        description: Name of dockerfile to use. Defaults to Dockerfile.
        type: string
        default: Dockerfile
      path:
        description: Path to the directory containing your Dockerfile and build context. Defaults to . (working directory).
        type: string
        default: .
      image:
        description: Name of image to create. Defaults to a combination of $CIRCLE_PROJECT_REPONAME.
        type: string
        default: $CIRCLE_PROJECT_REPONAME
      tag:
        description: Value for tag to use. Defaults to $CIRCLE_SHA1.
        type: string
        default: $CIRCLE_SHA1
      registry:
        description: Name of registry to use. Defaults to docker.io.
        type: string
        default: docker.io
      extra-build-args:
        description: >
          Extra flags to pass to docker build. For examples, see
          https://docs.docker.com/engine/reference/commandline/build
        type: string
        default: ""
    steps:
      - run:
          name: Build Docker Image
          command: |
            docker build \
              <<#parameters.extra_build_args>><<parameters.extra_build_args>><</parameters.extra_build_args>> \
              -f << parameters.dockerfile >> -t \
              << parameters.registry >>/<< parameters.image >>:<< parameters.tag >> \
              << parameters.path >>

  push:
    description: Deploy docker image to a registry.
    parameters:
      registry:
        description: Name of registry to use. Defaults to docker.io.
        type: string
        default: docker.io
      image:
        description: Name of image to create. Defaults to a combination of $CIRCLE_PROJECT_REPONAME.
        type: string
        default: $CIRCLE_PROJECT_REPONAME
      tag:
        description: Value for tag to use. Defaults to $CIRCLE_SHA1.
        type: string
        default: $CIRCLE_SHA1
      incremental-builds:
        description: Push each build as $CIRCLE_SHA1?
        type: boolean
        default: false
      release:
        description: Value for tag to use. Defaults to $CIRCLE_SHA1.
        type: string
        default: $CIRCLE_SHA1

    steps:
      - when:
          name: Publish a SHA tagged image?
          condition: << paramters.incremental-builds >>
          steps:
            - run:
                name: push SHA tag
                command: docker push << parameters.registry >>/<< parameters.image >>:<< parameters.tag >>
      - when:
          name: publish named release tag (such as edge or daily)?
          condition: << paramters.release >>
          steps:
            - run:
                name: tag the last build
      - run:
          name: Push Docker Image
          command: |
            if [[ $CIRCLE_NODE_INDEX == 0 ]]; then
              docker push << parameters.registry >>/<< parameters.image >>
            fi